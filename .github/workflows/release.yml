name: Release Events

on:
  release:
    types: [created]

permissions:
  contents: write
  id-token: write
  deployments: write
  pull-requests: write

jobs:
  create-artifact:
    name: Create artifact
    runs-on: ubuntu-latest
    environment:
      name: dev

    steps:
      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v3

      - name: üóùÔ∏è Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
          token_format: "access_token"

      - name: ‚òÅÔ∏è Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          install_components: "beta"

      - name: üóùÔ∏è Authenticate Docker to Google Cloud
        uses: docker/login-action@v2
        with:
          registry: us-central1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: üè∑Ô∏è Extract tags from GitHub
        id: meta
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: us-central1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/images/job
          tags: |
            type=raw,value=latest

      - name: üî∞ Setup pack
        uses: buildpacks/github-actions/setup-pack@v5.0.1

      - name: üñáÔ∏è Create custom pack run image
        run: docker build -t custom-run-image -f run.Dockerfile .

      - name: üì¶ Build image
        shell: bash
        run: pack build job --builder gcr.io/buildpacks/builder:v1 --run-image custom-run-image -t ${{ steps.meta.outputs.tags }}

      - name: üè∫ Push images to artifact registry
        shell: bash
        run: docker push ${{ steps.meta.outputs.tags }}

      - name: üöÄ Deploy to Cloud Run Job
        run: |
          if [ ! "$(gcloud beta run jobs list | grep default)" ]; then
            gcloud beta run jobs create default \
              --region us-central1 \
              --image us-central1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/images/job:latest \
              --service-account cloud-run-sa@${{ secrets.PROJECT_ID }}.iam.gserviceaccount.com \
              --set-env-vars INDEX_FILE_LOCATION=${{ secrets.INDEX_FILE_LOCATION }},INPUT_BUCKET=${{ secrets.INPUT_BUCKET }},OUTPUT_BUCKET=${{ secrets.OUTPUT_BUCKET }},PY_ENV=production,TOTAL_FILES=89537,JOB_NAME=alligator,JOB_TYPE=mosaic \
              --memory=8Gi \
              --cpu=2 \
              --max-retries 0 \
              --parallelism 0
          else
            gcloud beta run jobs update default \
                --region us-central1 \
                --image us-central1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/images/job:latest \
                --service-account cloud-run-sa@${{ secrets.PROJECT_ID }}.iam.gserviceaccount.com \
                --set-env-vars INDEX_FILE_LOCATION=${{ secrets.INDEX_FILE_LOCATION }},INPUT_BUCKET=${{ secrets.INPUT_BUCKET }},OUTPUT_BUCKET=${{ secrets.OUTPUT_BUCKET }},PY_ENV=production,TOTAL_FILES=89537,JOB_NAME=alligator,JOB_TYPE=mosaic \
                --memory=8Gi \
                --cpu=2 \
                --max-retries 0 \
                --parallelism 0
          fi

      - name: üöÄ Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ocr
          image: us-central1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/images/job:latest
          region: us-central1
          env_vars: |
            JOB_NAME=alligator
            INDEX_FILE_LOCATION=${{ secrets.INDEX_FILE_LOCATION }}
            INPUT_BUCKET=${{ secrets.INPUT_BUCKET }}
            OUTPUT_BUCKET=${{ secrets.OUTPUT_BUCKET }}
            PROJECT_NUMBER=${{ secrets.PROJECT_NUMBER }}
            PROCESSOR_ID=${{ secrets.PROCESSOR_ID }}
            JOB_TYPE=ocr
            PY_ENV=production
          flags: |
            --service-account=cloud-run-sa@${{ secrets.PROJECT_ID }}.iam.gserviceaccount.com
            --max-instances=1
            --cpu=1000m
            --memory=512Mi
            --timeout=1m

      - name: üï∞Ô∏è Create Cloud Scheduler
        run: |
          if [ ! "$(gcloud scheduler jobs list | grep every-minute)" ]; then
            gcloud scheduler jobs create http every-minute \
              --description="Trigger the cloud run once per minute until completion" \
              --schedule="* 9-17 * * *" \
              --time-zone=America/Denver \
              --uri=${{ steps.deploy.outputs.url }} \
              --http-method=POST \
              --max-retry-attempts=0 \
              --min-backoff=1m \
              --max-backoff=10m \
              --oidc-service-account-email=cloud-scheduler-sa@${{ secrets.PROJECT_ID }}.iam.gserviceaccount.com \
              --quiet
          else
            gcloud scheduler jobs update http every-minute \
              --description="Trigger the cloud run once per every-minute until completion" \
              --schedule="* 9-17 * * *" \
              --time-zone=America/Denver \
              --uri=${{ steps.deploy.outputs.url }} \
              --http-method=POST \
              --max-retry-attempts=0 \
              --min-backoff=1m \
              --max-backoff=10m \
              --oidc-service-account-email=cloud-scheduler-sa@${{ secrets.PROJECT_ID }}.iam.gserviceaccount.com \
              --quiet
          fi

      - name: Pause Schedule
        run: gcloud scheduler jobs pause every-minute
